"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Ghouls__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                internalType: "string",
                name: "symbol",
                type: "string",
            },
            {
                internalType: "string",
                name: "baseTokenURI_",
                type: "string",
            },
            {
                internalType: "address payable",
                name: "dbsTreasury",
                type: "address",
            },
            {
                internalType: "address payable",
                name: "royaltyReceiver",
                type: "address",
            },
            {
                internalType: "uint96",
                name: "royaltyBPS",
                type: "uint96",
            },
            {
                components: [
                    {
                        internalType: "uint104",
                        name: "publicSalePrice",
                        type: "uint104",
                    },
                    {
                        internalType: "uint64",
                        name: "publicSaleStart",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "allowlistStart",
                        type: "uint64",
                    },
                    {
                        internalType: "bytes32",
                        name: "allowlistMerkleRoot",
                        type: "bytes32",
                    },
                ],
                internalType: "struct Ghouls.SalesConfiguration",
                name: "salesConfig_",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "AirdropExceedsMaxSupply",
        type: "error",
    },
    {
        inputs: [],
        name: "AirdropTotalMismatch",
        type: "error",
    },
    {
        inputs: [],
        name: "AllowList_MerkleNotApproved",
        type: "error",
    },
    {
        inputs: [],
        name: "AllowList_TooManyForAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "ApprovalCallerNotOwnerNorApproved",
        type: "error",
    },
    {
        inputs: [],
        name: "ApprovalQueryForNonexistentToken",
        type: "error",
    },
    {
        inputs: [],
        name: "BalanceQueryForZeroAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "MintERC2309QuantityExceedsLimit",
        type: "error",
    },
    {
        inputs: [],
        name: "MintToZeroAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "MintZeroQuantity",
        type: "error",
    },
    {
        inputs: [],
        name: "Mint_SoldOut",
        type: "error",
    },
    {
        inputs: [],
        name: "OwnerQueryForNonexistentToken",
        type: "error",
    },
    {
        inputs: [],
        name: "OwnershipNotInitializedForExtraData",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "correctPrice",
                type: "uint256",
            },
        ],
        name: "Purchase_WrongPrice",
        type: "error",
    },
    {
        inputs: [],
        name: "Sale_NotStarted",
        type: "error",
    },
    {
        inputs: [],
        name: "TransferCallerNotOwnerNorApproved",
        type: "error",
    },
    {
        inputs: [],
        name: "TransferFromIncorrectOwner",
        type: "error",
    },
    {
        inputs: [],
        name: "TransferToNonERC721ReceiverImplementer",
        type: "error",
    },
    {
        inputs: [],
        name: "TransferToZeroAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "URIQueryForNonexistentToken",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "approved",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "ApprovalForAll",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "total",
                type: "uint256",
            },
        ],
        name: "BatchAirdropped",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "fromTokenId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "toTokenId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "ConsecutiveTransfer",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Paused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "quantity",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "pricePerToken",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "firstPurchasedTokenId",
                type: "uint256",
            },
        ],
        name: "Sale",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "changedBy",
                type: "address",
            },
        ],
        name: "SalesConfigChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Unpaused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "Withdrawn",
        type: "event",
    },
    {
        inputs: [],
        name: "NUM_AIRDROP_FREE",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "NUM_MAX_GHOULS",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "uint64",
                        name: "num",
                        type: "uint64",
                    },
                ],
                internalType: "struct Ghouls.Airdrop[]",
                name: "airdrops",
                type: "tuple[]",
            },
            {
                internalType: "uint256",
                name: "expectedTotal",
                type: "uint256",
            },
        ],
        name: "airdrop",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "getApproved",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getDBSTreasury",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getSaleDetails",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "publicSaleActive",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "allowlistActive",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "publicSalePrice",
                        type: "uint256",
                    },
                    {
                        internalType: "uint64",
                        name: "publicSaleStart",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "allowlistStart",
                        type: "uint64",
                    },
                    {
                        internalType: "bytes32",
                        name: "allowlistMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint256",
                        name: "totalMinted",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxSupply",
                        type: "uint256",
                    },
                ],
                internalType: "struct Ghouls.SaleDetails",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "isApprovedForAll",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "ownerOf",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "quantity",
                type: "uint256",
            },
        ],
        name: "purchase",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "quantity",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maxQuantity",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "pricePerToken",
                type: "uint256",
            },
            {
                internalType: "bytes32[]",
                name: "merkleProof",
                type: "bytes32[]",
            },
        ],
        name: "purchaseAllowList",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_salePrice",
                type: "uint256",
            },
        ],
        name: "royaltyInfo",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes",
            },
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "salesConfig",
        outputs: [
            {
                internalType: "uint104",
                name: "publicSalePrice",
                type: "uint104",
            },
            {
                internalType: "uint64",
                name: "publicSaleStart",
                type: "uint64",
            },
            {
                internalType: "uint64",
                name: "allowlistStart",
                type: "uint64",
            },
            {
                internalType: "bytes32",
                name: "allowlistMerkleRoot",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "setApprovalForAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "baseURI_",
                type: "string",
            },
        ],
        name: "setBaseURI",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address payable",
                name: "dbsTreasury",
                type: "address",
            },
        ],
        name: "setDBSTreasury",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "uint96",
                name: "basisPoints",
                type: "uint96",
            },
        ],
        name: "setDefaultRoyalty",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint104",
                        name: "publicSalePrice",
                        type: "uint104",
                    },
                    {
                        internalType: "uint64",
                        name: "publicSaleStart",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "allowlistStart",
                        type: "uint64",
                    },
                    {
                        internalType: "bytes32",
                        name: "allowlistMerkleRoot",
                        type: "bytes32",
                    },
                ],
                internalType: "struct Ghouls.SalesConfiguration",
                name: "_salesConfig",
                type: "tuple",
            },
        ],
        name: "setSaleConfiguration",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "tokenURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "unpause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "withdraw",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b5060405162002a5e38038062002a5e833981016040819052620000349162000427565b868686858584846002620000498382620005a2565b506003620000588282620005a2565b50506001600055506200006b3362000134565b6008805460ff60a01b1916905562000084828262000186565b600b620000928482620005a2565b50506001600c5550508251600d8054602086015160408701516001600160681b039094166001600160a81b0319909216919091176d01000000000000000000000000006001600160401b039283160217600160a81b600160e81b031916600160a81b9190931602919091179055505060600151600e555050601080546001600160a01b0319166001600160a01b0392909216919091179055506200066e915050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6127106001600160601b0382161115620001fa5760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b60648201526084015b60405180910390fd5b6001600160a01b038216620002525760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606401620001f1565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600955565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620002cc57620002cc6200028b565b604052919050565b600082601f830112620002e657600080fd5b81516001600160401b038111156200030257620003026200028b565b602062000318601f8301601f19168201620002a1565b82815285828487010111156200032d57600080fd5b60005b838110156200034d57858101830151828201840152820162000330565b506000928101909101919091529392505050565b80516001600160a01b03811681146200037957600080fd5b919050565b80516001600160401b03811681146200037957600080fd5b600060808284031215620003a957600080fd5b604051608081016001600160401b0381118282101715620003ce57620003ce6200028b565b604052825190915081906001600160681b0381168114620003ee57600080fd5b8152620003fe602084016200037e565b602082015262000411604084016200037e565b6040820152606083015160608201525092915050565b6000806000806000806000610140888a0312156200044457600080fd5b87516001600160401b03808211156200045c57600080fd5b6200046a8b838c01620002d4565b985060208a01519150808211156200048157600080fd5b6200048f8b838c01620002d4565b975060408a0151915080821115620004a657600080fd5b50620004b58a828b01620002d4565b955050620004c66060890162000361565b9350620004d66080890162000361565b60a08901519093506001600160601b0381168114620004f457600080fd5b9150620005058960c08a0162000396565b905092959891949750929550565b600181811c908216806200052857607f821691505b6020821081036200054957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200059d57600081815260208120601f850160051c81016020861015620005785750805b601f850160051c820191505b81811015620005995782815560010162000584565b5050505b505050565b81516001600160401b03811115620005be57620005be6200028b565b620005d681620005cf845462000513565b846200054f565b602080601f8311600181146200060e5760008415620005f55750858301515b600019600386901b1c1916600185901b17855562000599565b600085815260208120601f198616915b828110156200063f578886015182559484019460019091019084016200061e565b50858210156200065e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6123e0806200067e6000396000f3fe6080604052600436106101f95760003560e01c806370a082311161010d578063b88d4fde116100a0578063e134e2a51161006f578063e134e2a514610665578063e985e9c51461067b578063efef39a11461069b578063f2fde38b146106ae578063f82f5bd6146106ce57600080fd5b8063b88d4fde1461057c578063c6dd190b1461059c578063c87b56dd146105bc578063d0b5235c146105dc57600080fd5b80638456cb59116100dc5780638456cb59146105145780638da5cb5b1461052957806395d89b4114610547578063a22cb4651461055c57600080fd5b806370a08231146104ac578063715018a6146104cc57806373d8e896146104e1578063769d8d1e146104ff57600080fd5b80631d2c0b38116101905780633f4ba83a1161015f5780633f4ba83a1461041857806342842e0e1461042d57806355f804b31461044d5780635c975abb1461046d5780636352211e1461048c57600080fd5b80631d2c0b381461032d57806323b872dd146103a45780632a55205a146103c45780633ccfd60b1461040357600080fd5b8063081812fc116101cc578063081812fc14610297578063095ea7b3146102cf5780630c603ea3146102ef57806318160ddd1461031057600080fd5b806301ffc9a7146101fe57806304634d8d1461023357806306fdde0314610255578063074a98a014610277575b600080fd5b34801561020a57600080fd5b5061021e610219366004611c2b565b6106ee565b60405190151581526020015b60405180910390f35b34801561023f57600080fd5b5061025361024e366004611c5d565b61070e565b005b34801561026157600080fd5b5061026a610724565b60405161022a9190611cf2565b34801561028357600080fd5b50610253610292366004611d32565b6107b6565b3480156102a357600080fd5b506102b76102b2366004611db8565b61085a565b6040516001600160a01b03909116815260200161022a565b3480156102db57600080fd5b506102536102ea366004611dd1565b61089e565b6103026102fd366004611dfd565b61093e565b60405190815260200161022a565b34801561031c57600080fd5b506001546000540360001901610302565b34801561033957600080fd5b50600d54600e5461036d916001600160681b038116916001600160401b03600160681b8304811692600160a81b9004169084565b604080516001600160681b039590951685526001600160401b0393841660208601529190921690830152606082015260800161022a565b3480156103b057600080fd5b506102536103bf366004611e8c565b610b4b565b3480156103d057600080fd5b506103e46103df366004611ecd565b610cf1565b604080516001600160a01b03909316835260208301919091520161022a565b34801561040f57600080fd5b50610253610d9d565b34801561042457600080fd5b50610253610e5a565b34801561043957600080fd5b50610253610448366004611e8c565b610e6c565b34801561045957600080fd5b50610253610468366004611f64565b610e8c565b34801561047957600080fd5b50600854600160a01b900460ff1661021e565b34801561049857600080fd5b506102b76104a7366004611db8565b610ea0565b3480156104b857600080fd5b506103026104c7366004611fac565b610eab565b3480156104d857600080fd5b50610253610ef9565b3480156104ed57600080fd5b506010546001600160a01b03166102b7565b34801561050b57600080fd5b50610302606d81565b34801561052057600080fd5b50610253610f0b565b34801561053557600080fd5b506008546001600160a01b03166102b7565b34801561055357600080fd5b5061026a610f1b565b34801561056857600080fd5b50610253610577366004611fc9565b610f2a565b34801561058857600080fd5b50610253610597366004611ffc565b610f96565b3480156105a857600080fd5b506102536105b736600461207b565b610fe0565b3480156105c857600080fd5b5061026a6105d7366004611db8565b61112f565b3480156105e857600080fd5b506105f16111b3565b60405161022a91906000610100820190508251151582526020830151151560208301526040830151604083015260608301516001600160401b038082166060850152806080860151166080850152505060a083015160a083015260c083015160c083015260e083015160e083015292915050565b34801561067157600080fd5b5061030261029a81565b34801561068757600080fd5b5061021e6106963660046120f5565b6112a3565b6103026106a9366004611db8565b6112d1565b3480156106ba57600080fd5b506102536106c9366004611fac565b6113d7565b3480156106da57600080fd5b506102536106e9366004611fac565b611450565b60006106f98261147a565b806107085750610708826114c8565b92915050565b6107166114fd565b6107208282611557565b5050565b60606002805461073390612123565b80601f016020809104026020016040519081016040528092919081815260200182805461075f90612123565b80156107ac5780601f10610781576101008083540402835291602001916107ac565b820191906000526020600020905b81548152906001019060200180831161078f57829003601f168201915b5050505050905090565b6107be6114fd565b8051600d8054602084015160408501516001600160681b039094166001600160a81b031990921691909117600160681b6001600160401b03928316021767ffffffffffffffff60a81b1916600160a81b91909316029190911790556060810151600e55336001600160a01b03167fc1ff5e4744ac8dd2b8027a10e3723b165975297501c71c4e7dcb8796d96375db60405160405180910390a250565b600061086582611654565b610882576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006108a982610ea0565b9050336001600160a01b038216146108e2576108c581336112a3565b6108e2576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000610948611689565b85610956606d61029a612173565b600054600019016109679083612186565b111561098657604051630717c51360e41b815260040160405180910390fd5b600d54600160a81b90046001600160401b03164210156109b9576040516397f2fd8760e01b815260040160405180910390fd5b610a3384848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600e549150339050604080516001600160a01b03909216602083015281018a905260608101899052608001604051602081830303815290604052805190602001206116e2565b610a5057604051637def5c7d60e11b815260040160405180910390fd5b610a5a8786612199565b3414610a8f57610a6a8786612199565b60405163350e0bcf60e11b8152600401610a8691815260200190565b60405180910390fd5b336000908152600f602052604081208054899290610aae908490612186565b9091555050336000908152600f6020526040902054861015610ae357604051633691064b60e01b815260040160405180910390fd5b600054610af033896116f8565b8588336001600160a01b03167f4e26b0356a15833a75d497ecc40ebbb716b99466ed0dba9454f1fff451e25a9084604051610b2d91815260200190565b60405180910390a4915050610b426001600c55565b95945050505050565b6000610b5682611803565b9050836001600160a01b0316816001600160a01b031614610b895760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b03881690911417610bd657610bb986336112a3565b610bd657604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610bfd57604051633a954ecd60e21b815260040160405180910390fd5b610c0a8686866001611872565b8015610c1557600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610ca757600184016000818152600460205260408120549003610ca5576000548114610ca55760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050505050565b6000828152600a602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b0316928201929092528291610d665750604080518082019091526009546001600160a01b0381168252600160a01b90046001600160601b031660208201525b602081015160009061271090610d85906001600160601b031687612199565b610d8f91906121b0565b915196919550909350505050565b610da56114fd565b4780610de95760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b6044820152606401610a86565b6010546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610e23573d6000803e3d6000fd5b506040518181527f430648de173157e069201c943adb2d4e340e7cf5b27b1b09c9cb852f03d63b569060200160405180910390a150565b610e626114fd565b610e6a6118e2565b565b610e8783838360405180602001604052806000815250610f96565b505050565b610e946114fd565b600b6107208282612218565b600061070882611803565b60006001600160a01b038216610ed4576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b610f016114fd565b610e6a6000611937565b610f136114fd565b610e6a611989565b60606003805461073390612123565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610fa1848484610b4b565b6001600160a01b0383163b15610fda57610fbd848484846119cc565b610fda576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b610fe86114fd565b6000805b838110156110a657611057858583818110611009576110096122d7565b61101f9260206040909202019081019150611fac565b868684818110611031576110316122d7565b905060400201602001602081019061104991906122ed565b6001600160401b03166116f8565b848482818110611069576110696122d7565b905060400201602001602081019061108191906122ed565b611094906001600160401b031683612186565b915061109f81612308565b9050610fec565b5061029a6110b76000546000190190565b11156110d65760405163373f5c5960e11b815260040160405180910390fd5b8181146110f657604051630287775560e31b815260040160405180910390fd5b6040518181527f4b1b06271a0c8fdf7dcd6d58f43f9f9220b08b4f8aed9503fe1af53d49db43eb9060200160405180910390a150505050565b606061113a82611654565b61115757604051630a14c4b560e41b815260040160405180910390fd5b6000611161611ab8565b9050805160000361118157604051806020016040528060008152506111ac565b8061118b84611ac7565b60405160200161119c929190612321565b6040516020818303038152906040525b9392505050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915260405180610100016040528061121d600d546001600160401b03600160681b9091041642101590565b15158152602001611241600d546001600160401b03600160a81b9091041642101590565b15158152600d546001600160681b03811660208301526001600160401b03600160681b820481166040840152600160a81b909104166060820152600e54608082015260a0016112936000546000190190565b815260200161029a815250905090565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006112db611689565b816112e9606d61029a612173565b600054600019016112fa9083612186565b111561131957604051630717c51360e41b815260040160405180910390fd5b600d54600160681b90046001600160401b031642101561134c576040516397f2fd8760e01b815260040160405180910390fd5b600d546001600160681b03166113628482612199565b341461137257610a6a8482612199565b60005461137f33866116f8565b8185336001600160a01b03167f4e26b0356a15833a75d497ecc40ebbb716b99466ed0dba9454f1fff451e25a90846040516113bc91815260200190565b60405180910390a4925050506113d26001600c55565b919050565b6113df6114fd565b6001600160a01b0381166114445760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a86565b61144d81611937565b50565b6114586114fd565b601080546001600160a01b0319166001600160a01b0392909216919091179055565b60006301ffc9a760e01b6001600160e01b0319831614806114ab57506380ac58cd60e01b6001600160e01b03198316145b806107085750506001600160e01b031916635b5e139f60e01b1490565b60006001600160e01b0319821663152a902d60e11b148061070857506301ffc9a760e01b6001600160e01b0319831614610708565b6008546001600160a01b03163314610e6a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a86565b6127106001600160601b03821611156115c55760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b6064820152608401610a86565b6001600160a01b03821661161b5760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606401610a86565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600955565b600081600111158015611668575060005482105b8015610708575050600090815260046020526040902054600160e01b161590565b6002600c54036116db5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a86565b6002600c55565b6000826116ef8584611aff565b14949350505050565b600080549082900361171d5760405163b562e8dd60e01b815260040160405180910390fd5b61172a6000848385611872565b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b8181146117d957808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001016117a1565b50816000036117fa57604051622e076360e81b815260040160405180910390fd5b60005550505050565b60008180600111611859576000548110156118595760008181526004602052604081205490600160e01b82169003611857575b806000036111ac575060001901600081815260046020526040902054611836565b505b604051636f96cda160e11b815260040160405180910390fd5b600854600160a01b900460ff16156118dd5760405162461bcd60e51b815260206004820152602860248201527f45524337323141426173653a20746f6b656e207472616e73666572207768696c60448201526719481c185d5cd95960c21b6064820152608401610a86565b610fda565b6118ea611b4c565b6008805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611991611b9c565b6008805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861191a3390565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611a01903390899088908890600401612350565b6020604051808303816000875af1925050508015611a3c575060408051601f3d908101601f19168201909252611a399181019061238d565b60015b611a9a573d808015611a6a576040519150601f19603f3d011682016040523d82523d6000602084013e611a6f565b606091505b508051600003611a92576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600b805461073390612123565b604080516080019081905280825b600183039250600a81066030018353600a900480611ad55750819003601f19909101908152919050565b600081815b8451811015611b4457611b3082868381518110611b2357611b236122d7565b6020026020010151611be9565b915080611b3c81612308565b915050611b04565b509392505050565b600854600160a01b900460ff16610e6a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610a86565b600854600160a01b900460ff1615610e6a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610a86565b6000818310611c055760008281526020849052604090206111ac565b5060009182526020526040902090565b6001600160e01b03198116811461144d57600080fd5b600060208284031215611c3d57600080fd5b81356111ac81611c15565b6001600160a01b038116811461144d57600080fd5b60008060408385031215611c7057600080fd5b8235611c7b81611c48565b915060208301356001600160601b0381168114611c9757600080fd5b809150509250929050565b60005b83811015611cbd578181015183820152602001611ca5565b50506000910152565b60008151808452611cde816020860160208601611ca2565b601f01601f19169290920160200192915050565b6020815260006111ac6020830184611cc6565b634e487b7160e01b600052604160045260246000fd5b80356001600160401b03811681146113d257600080fd5b600060808284031215611d4457600080fd5b604051608081018181106001600160401b0382111715611d6657611d66611d05565b60405282356001600160681b0381168114611d8057600080fd5b8152611d8e60208401611d1b565b6020820152611d9f60408401611d1b565b6040820152606083013560608201528091505092915050565b600060208284031215611dca57600080fd5b5035919050565b60008060408385031215611de457600080fd5b8235611def81611c48565b946020939093013593505050565b600080600080600060808688031215611e1557600080fd5b85359450602086013593506040860135925060608601356001600160401b0380821115611e4157600080fd5b818801915088601f830112611e5557600080fd5b813581811115611e6457600080fd5b8960208260051b8501011115611e7957600080fd5b9699959850939650602001949392505050565b600080600060608486031215611ea157600080fd5b8335611eac81611c48565b92506020840135611ebc81611c48565b929592945050506040919091013590565b60008060408385031215611ee057600080fd5b50508035926020909101359150565b60006001600160401b0380841115611f0957611f09611d05565b604051601f8501601f19908116603f01168101908282118183101715611f3157611f31611d05565b81604052809350858152868686011115611f4a57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611f7657600080fd5b81356001600160401b03811115611f8c57600080fd5b8201601f81018413611f9d57600080fd5b611ab084823560208401611eef565b600060208284031215611fbe57600080fd5b81356111ac81611c48565b60008060408385031215611fdc57600080fd5b8235611fe781611c48565b915060208301358015158114611c9757600080fd5b6000806000806080858703121561201257600080fd5b843561201d81611c48565b9350602085013561202d81611c48565b92506040850135915060608501356001600160401b0381111561204f57600080fd5b8501601f8101871361206057600080fd5b61206f87823560208401611eef565b91505092959194509250565b60008060006040848603121561209057600080fd5b83356001600160401b03808211156120a757600080fd5b818601915086601f8301126120bb57600080fd5b8135818111156120ca57600080fd5b8760208260061b85010111156120df57600080fd5b6020928301989097509590910135949350505050565b6000806040838503121561210857600080fd5b823561211381611c48565b91506020830135611c9781611c48565b600181811c9082168061213757607f821691505b60208210810361215757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156107085761070861215d565b808201808211156107085761070861215d565b80820281158282048414176107085761070861215d565b6000826121cd57634e487b7160e01b600052601260045260246000fd5b500490565b601f821115610e8757600081815260208120601f850160051c810160208610156121f95750805b601f850160051c820191505b81811015610ce957828155600101612205565b81516001600160401b0381111561223157612231611d05565b6122458161223f8454612123565b846121d2565b602080601f83116001811461227a57600084156122625750858301515b600019600386901b1c1916600185901b178555610ce9565b600085815260208120601f198616915b828110156122a95788860151825594840194600190910190840161228a565b50858210156122c75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156122ff57600080fd5b6111ac82611d1b565b60006001820161231a5761231a61215d565b5060010190565b60008351612333818460208801611ca2565b835190830190612347818360208801611ca2565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061238390830184611cc6565b9695505050505050565b60006020828403121561239f57600080fd5b81516111ac81611c1556fea2646970667358221220628f918c246ddac14387acfdb6d97f3ee0322fee0ee2bff9b743b0520ee6e80b64736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class Ghouls__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(name, symbol, baseTokenURI_, dbsTreasury, royaltyReceiver, royaltyBPS, salesConfig_, overrides) {
        return super.deploy(name, symbol, baseTokenURI_, dbsTreasury, royaltyReceiver, royaltyBPS, salesConfig_, overrides || {});
    }
    getDeployTransaction(name, symbol, baseTokenURI_, dbsTreasury, royaltyReceiver, royaltyBPS, salesConfig_, overrides) {
        return super.getDeployTransaction(name, symbol, baseTokenURI_, dbsTreasury, royaltyReceiver, royaltyBPS, salesConfig_, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Ghouls__factory = Ghouls__factory;
Ghouls__factory.bytecode = _bytecode;
Ghouls__factory.abi = _abi;
