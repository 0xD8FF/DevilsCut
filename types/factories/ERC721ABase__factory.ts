/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ERC721ABase, ERC721ABaseInterface } from "../ERC721ABase";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
      {
        internalType: "address payable",
        name: "royaltyRecipient",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "royaltyBPS",
        type: "uint96",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "basisPoints",
        type: "uint96",
      },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022b0380380620022b08339810160408190526200003491620002b5565b848460026200004483826200041a565b5060036200005382826200041a565b5050600160005550620000663362000099565b6008805460ff60a01b191690556200007f8282620000eb565b600b6200008d84826200041a565b505050505050620004e6565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6127106001600160601b03821611156200015f5760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b60648201526084015b60405180910390fd5b6001600160a01b038216620001b75760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c696420726563656976657200000000000000604482015260640162000156565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600955565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021857600080fd5b81516001600160401b0380821115620002355762000235620001f0565b604051601f8301601f19908116603f01168101908282118183101715620002605762000260620001f0565b816040528381526020925086838588010111156200027d57600080fd5b600091505b83821015620002a1578582018301518183018401529082019062000282565b600093810190920192909252949350505050565b600080600080600060a08688031215620002ce57600080fd5b85516001600160401b0380821115620002e657600080fd5b620002f489838a0162000206565b965060208801519150808211156200030b57600080fd5b6200031989838a0162000206565b955060408801519150808211156200033057600080fd5b506200033f8882890162000206565b606088015190945090506001600160a01b03811681146200035f57600080fd5b60808701519092506001600160601b03811681146200037d57600080fd5b809150509295509295909350565b600181811c90821680620003a057607f821691505b602082108103620003c157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200041557600081815260208120601f850160051c81016020861015620003f05750805b601f850160051c820191505b818110156200041157828155600101620003fc565b5050505b505050565b81516001600160401b03811115620004365762000436620001f0565b6200044e816200044784546200038b565b84620003c7565b602080601f8311600181146200048657600084156200046d5750858301515b600019600386901b1c1916600185901b17855562000411565b600085815260208120601f198616915b82811015620004b75788860151825594840194600190910190840162000496565b5085821015620004d65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611dba80620004f66000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80635c975abb116100e357806395d89b411161008c578063c87b56dd11610066578063c87b56dd1461038c578063e985e9c51461039f578063f2fde38b146103e857600080fd5b806395d89b411461035e578063a22cb46514610366578063b88d4fde1461037957600080fd5b8063715018a6116100bd578063715018a6146103305780638456cb59146103385780638da5cb5b1461034057600080fd5b80635c975abb146102e75780636352211e1461030a57806370a082311461031d57600080fd5b806318160ddd116101455780633f4ba83a1161011f5780633f4ba83a146102b957806342842e0e146102c157806355f804b3146102d457600080fd5b806318160ddd1461022f57806323b872dd146102675780632a55205a1461027a57600080fd5b806306fdde031161017657806306fdde03146101cf578063081812fc146101e4578063095ea7b31461021c57600080fd5b806301ffc9a71461019257806304634d8d146101ba575b600080fd5b6101a56101a036600461170c565b6103fb565b60405190151581526020015b60405180910390f35b6101cd6101c8366004611752565b61041b565b005b6101d7610431565b6040516101b19190611808565b6101f76101f236600461181b565b6104c3565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b1565b6101cd61022a366004611834565b61052d565b600154600054037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff015b6040519081526020016101b1565b6101cd61027536600461185e565b610642565b61028d61028836600461189a565b610909565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152016101b1565b6101cd610a00565b6101cd6102cf36600461185e565b610a12565b6101cd6102e236600461197f565b610a32565b60085474010000000000000000000000000000000000000000900460ff166101a5565b6101f761031836600461181b565b610a46565b61025961032b3660046119c8565b610a51565b6101cd610ad3565b6101cd610ae5565b60085473ffffffffffffffffffffffffffffffffffffffff166101f7565b6101d7610af5565b6101cd6103743660046119e3565b610b04565b6101cd610387366004611a14565b610b9b565b6101d761039a36600461181b565b610c0b565b6101a56103ad366004611a90565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260076020908152604080832093909416825291909152205460ff1690565b6101cd6103f63660046119c8565b610ca8565b600061040682610d64565b80610415575061041582610e45565b92915050565b610423610edc565b61042d8282610f5d565b5050565b60606002805461044090611ac3565b80601f016020809104026020016040519081016040528092919081815260200182805461046c90611ac3565b80156104b95780601f1061048e576101008083540402835291602001916104b9565b820191906000526020600020905b81548152906001019060200180831161049c57829003601f168201915b5050505050905090565b60006104ce826110d6565b610504576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060009081526006602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b600061053882610a46565b90503373ffffffffffffffffffffffffffffffffffffffff8216146105c15773ffffffffffffffffffffffffffffffffffffffff8116600090815260076020908152604080832033845290915290205460ff166105c1576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526006602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061064d82611124565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106b4576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815260066020526040902080543380821473ffffffffffffffffffffffffffffffffffffffff8816909114176107515773ffffffffffffffffffffffffffffffffffffffff8616600090815260076020908152604080832033845290915290205460ff16610751576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff851661079e576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107ab86868660016111e3565b80156107b657600082555b73ffffffffffffffffffffffffffffffffffffffff86811660009081526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055918716808252919020805460010190554260a01b177c0200000000000000000000000000000000000000000000000000000000176000858152600460205260408120919091557c0200000000000000000000000000000000000000000000000000000000841690036108a5576001840160008181526004602052604081205490036108a35760005481146108a35760008181526004602052604090208490555b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050505050565b6000828152600a6020908152604080832081518083019092525473ffffffffffffffffffffffffffffffffffffffff8116808352740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff169282019290925282916109c457506040805180820190915260095473ffffffffffffffffffffffffffffffffffffffff811682527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1660208201525b6020810151600090612710906109e8906bffffffffffffffffffffffff1687611b16565b6109f29190611b54565b915196919550909350505050565b610a08610edc565b610a10611293565b565b610a2d83838360405180602001604052806000815250610b9b565b505050565b610a3a610edc565b600b61042d8282611bd5565b600061041582611124565b600073ffffffffffffffffffffffffffffffffffffffff8216610aa0576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5073ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205467ffffffffffffffff1690565b610adb610edc565b610a106000611310565b610aed610edc565b610a10611387565b60606003805461044090611ac3565b33600081815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610ba6848484610642565b73ffffffffffffffffffffffffffffffffffffffff83163b15610c0557610bcf848484846113f6565b610c05576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b6060610c16826110d6565b610c4c576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610c56611570565b90508051600003610c765760405180602001604052806000815250610ca1565b80610c808461157f565b604051602001610c91929190611cef565b6040516020818303038152906040525b9392505050565b610cb0610edc565b73ffffffffffffffffffffffffffffffffffffffff8116610d58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610d6181611310565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083161480610df757507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806104155750507fffffffff00000000000000000000000000000000000000000000000000000000167f5b5e139f000000000000000000000000000000000000000000000000000000001490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f2a55205a00000000000000000000000000000000000000000000000000000000148061041557507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610415565b60085473ffffffffffffffffffffffffffffffffffffffff163314610a10576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d4f565b6127106bffffffffffffffffffffffff82161115610ffd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c2065786365656460448201527f2073616c655072696365000000000000000000000000000000000000000000006064820152608401610d4f565b73ffffffffffffffffffffffffffffffffffffffff821661107a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606401610d4f565b6040805180820190915273ffffffffffffffffffffffffffffffffffffffff9092168083526bffffffffffffffffffffffff90911660209092018290527401000000000000000000000000000000000000000090910217600955565b6000816001111580156110ea575060005482105b80156104155750506000908152600460205260409020547c0100000000000000000000000000000000000000000000000000000000161590565b600081806001116111b1576000548110156111b157600081815260046020526040812054907c0100000000000000000000000000000000000000000000000000000000821690036111af575b80600003610ca157507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01600081815260046020526040902054611170565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60085474010000000000000000000000000000000000000000900460ff161561128e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f45524337323141426173653a20746f6b656e207472616e73666572207768696c60448201527f65207061757365640000000000000000000000000000000000000000000000006064820152608401610d4f565b610c05565b61129b6115d5565b600880547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b6008805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61138f611659565b600880547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112e63390565b6040517f150b7a0200000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063150b7a0290611451903390899088908890600401611d1e565b6020604051808303816000875af19250505080156114aa575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526114a791810190611d67565b60015b611521573d8080156114d8576040519150601f19603f3d011682016040523d82523d6000602084013e6114dd565b606091505b508051600003611519576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001490505b949350505050565b6060600b805461044090611ac3565b604080516080019081905280825b600183039250600a81066030018353600a90048061158d57508190037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909101908152919050565b60085474010000000000000000000000000000000000000000900460ff16610a10576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610d4f565b60085474010000000000000000000000000000000000000000900460ff1615610a10576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610d4f565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610d6157600080fd5b60006020828403121561171e57600080fd5b8135610ca1816116de565b803573ffffffffffffffffffffffffffffffffffffffff8116811461174d57600080fd5b919050565b6000806040838503121561176557600080fd5b61176e83611729565b915060208301356bffffffffffffffffffffffff8116811461178f57600080fd5b809150509250929050565b60005b838110156117b557818101518382015260200161179d565b50506000910152565b600081518084526117d681602086016020860161179a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610ca160208301846117be565b60006020828403121561182d57600080fd5b5035919050565b6000806040838503121561184757600080fd5b61185083611729565b946020939093013593505050565b60008060006060848603121561187357600080fd5b61187c84611729565b925061188a60208501611729565b9150604084013590509250925092565b600080604083850312156118ad57600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600067ffffffffffffffff80841115611906576119066118bc565b604051601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561194c5761194c6118bc565b8160405280935085815286868601111561196557600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561199157600080fd5b813567ffffffffffffffff8111156119a857600080fd5b8201601f810184136119b957600080fd5b611568848235602084016118eb565b6000602082840312156119da57600080fd5b610ca182611729565b600080604083850312156119f657600080fd5b6119ff83611729565b91506020830135801515811461178f57600080fd5b60008060008060808587031215611a2a57600080fd5b611a3385611729565b9350611a4160208601611729565b925060408501359150606085013567ffffffffffffffff811115611a6457600080fd5b8501601f81018713611a7557600080fd5b611a84878235602084016118eb565b91505092959194509250565b60008060408385031215611aa357600080fd5b611aac83611729565b9150611aba60208401611729565b90509250929050565b600181811c90821680611ad757607f821691505b602082108103611b10577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8082028115828204841417610415577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082611b8a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b601f821115610a2d57600081815260208120601f850160051c81016020861015611bb65750805b601f850160051c820191505b8181101561090157828155600101611bc2565b815167ffffffffffffffff811115611bef57611bef6118bc565b611c0381611bfd8454611ac3565b84611b8f565b602080601f831160018114611c565760008415611c205750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610901565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611ca357888601518255948401946001909101908401611c84565b5085821015611cdf57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60008351611d0181846020880161179a565b835190830190611d1581836020880161179a565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611d5d60808301846117be565b9695505050505050565b600060208284031215611d7957600080fd5b8151610ca1816116de56fea2646970667358221220f378689663f060e10051f40b7dc7e93c34f2beaf5db0a47919988ec0f92f480964736f6c63430008110033";

type ERC721ABaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ABaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721ABase__factory extends ContractFactory {
  constructor(...args: ERC721ABaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    baseURI_: PromiseOrValue<string>,
    royaltyRecipient: PromiseOrValue<string>,
    royaltyBPS: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721ABase> {
    return super.deploy(
      name,
      symbol,
      baseURI_,
      royaltyRecipient,
      royaltyBPS,
      overrides || {}
    ) as Promise<ERC721ABase>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    baseURI_: PromiseOrValue<string>,
    royaltyRecipient: PromiseOrValue<string>,
    royaltyBPS: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      baseURI_,
      royaltyRecipient,
      royaltyBPS,
      overrides || {}
    );
  }
  override attach(address: string): ERC721ABase {
    return super.attach(address) as ERC721ABase;
  }
  override connect(signer: Signer): ERC721ABase__factory {
    return super.connect(signer) as ERC721ABase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ABaseInterface {
    return new utils.Interface(_abi) as ERC721ABaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721ABase {
    return new Contract(address, _abi, signerOrProvider) as ERC721ABase;
  }
}
