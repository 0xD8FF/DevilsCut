// Generated by @wagmi/cli@1.3.0 on 7/16/2023 at 11:48:48 PM
import {
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
  Address,
} from 'wagmi'
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// erc20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20ABI = [
  {
    type: 'event',
    inputs: [
      { name: 'owner', type: 'address', indexed: true },
      { name: 'spender', type: 'address', indexed: true },
      { name: 'value', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    inputs: [
      { name: 'from', type: 'address', indexed: true },
      { name: 'to', type: 'address', indexed: true },
      { name: 'value', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', type: 'address' },
      { name: 'spender', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'recipient', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sender', type: 'address' },
      { name: 'recipient', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DevilsCut
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export const devilsCutABI = [
  {
    stateMutability: 'payable',
    type: 'constructor',
    inputs: [
      { name: 'share_', internalType: 'uint256', type: 'uint256' },
      { name: 'ghouls_', internalType: 'address', type: 'address' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'token',
        internalType: 'contract IERC20',
        type: 'address',
        indexed: true,
      },
      { name: 'to', internalType: 'address', type: 'address', indexed: false },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ERC20PaymentReleased',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'from',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PaymentReceived',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'to', internalType: 'address', type: 'address', indexed: false },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PaymentReleased',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'receiver', internalType: 'address payable', type: 'address' },
      { name: 'token', internalType: 'contract IERC20', type: 'address' },
    ],
    name: 'emergencyWithdraw',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'receiver', internalType: 'address payable', type: 'address' },
    ],
    name: 'emergencyWithdraw',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ghouls',
    outputs: [{ name: '', internalType: 'contract Ghouls', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  // {
  //   stateMutability: 'view',
  //   type: 'function',
  //   inputs: [
  //     { name: 'token', internalType: 'contract IERC20', type: 'address' },
  //     { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
  //   ],
  //   name: 'releasable',
  //   outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  // },
  // {
  //   stateMutability: 'view',
  //   type: 'function',
  //   inputs: [
  //     { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
  //     { name: 'sumPayments', internalType: 'uint256', type: 'uint256' },
  //   ],
  //   name: 'releasable',
  //   outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  // },
  // {
  //   stateMutability: 'view',
  //   type: 'function',
  //   inputs: [
  //     { name: 'token', internalType: 'contract IERC20', type: 'address' },
  //     { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
  //     { name: 'sumPayments', internalType: 'uint256', type: 'uint256' },
  //   ],
  //   name: 'releasable',
  //   outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  // },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'releasable',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  // {
  //   stateMutability: 'nonpayable',
  //   type: 'function',
  //   inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
  //   name: 'release',
  //   outputs: [],
  // },
  // {
  //   stateMutability: 'nonpayable',
  //   type: 'function',
  //   inputs: [
  //     { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
  //     { name: 'token', internalType: 'contract IERC20', type: 'address' },
  //     { name: 'to', internalType: 'address', type: 'address' },
  //   ],
  //   name: 'release',
  //   outputs: [],
  // },
  // {
  //   stateMutability: 'nonpayable',
  //   type: 'function',
  //   inputs: [
  //     { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
  //     { name: 'token', internalType: 'contract IERC20', type: 'address' },
  //   ],
  //   name: 'release',
  //   outputs: [],
  // },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'to', internalType: 'address', type: 'address' },
    ],
    name: 'release',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'released',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'token', internalType: 'contract IERC20', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'released',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'share_', internalType: 'uint256', type: 'uint256' }],
    name: 'setShares',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'shares',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'token', internalType: 'contract IERC20', type: 'address' },
    ],
    name: 'totalReleased',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalReleased',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  { stateMutability: 'payable', type: 'receive' },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export const devilsCutAddress = {
  1: '0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export const devilsCutConfig = {
  address: devilsCutAddress,
  abi: devilsCutABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Read<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    'abi'
  > = {} as any,
) {
  return useContractRead({ abi: erc20ABI, ...config } as UseContractReadConfig<
    typeof erc20ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"allowance"`.
 */
export function useErc20Allowance<
  TFunctionName extends 'allowance',
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'allowance',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useErc20BalanceOf<
  TFunctionName extends 'balanceOf',
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"decimals"`.
 */
export function useErc20Decimals<
  TFunctionName extends 'decimals',
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"name"`.
 */
export function useErc20Name<
  TFunctionName extends 'name',
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"symbol"`.
 */
export function useErc20Symbol<
  TFunctionName extends 'symbol',
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useErc20TotalSupply<
  TFunctionName extends 'totalSupply',
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Write<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
      PrepareWriteContractResult<typeof erc20ABI, string>['request']['abi'],
      TFunctionName,
      TMode
    >
    : UseContractWriteConfig<typeof erc20ABI, TFunctionName, TMode> & {
      abi?: never
    } = {} as any,
) {
  return useContractWrite<typeof erc20ABI, TFunctionName, TMode>({
    abi: erc20ABI,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"approve"`.
 */
export function useErc20Approve<TMode extends WriteContractMode = undefined>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
      PrepareWriteContractResult<
        typeof erc20ABI,
        'approve'
      >['request']['abi'],
      'approve',
      TMode
    > & { functionName?: 'approve' }
    : UseContractWriteConfig<typeof erc20ABI, 'approve', TMode> & {
      abi?: never
      functionName?: 'approve'
    } = {} as any,
) {
  return useContractWrite<typeof erc20ABI, 'approve', TMode>({
    abi: erc20ABI,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transfer"`.
 */
export function useErc20Transfer<TMode extends WriteContractMode = undefined>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
      PrepareWriteContractResult<
        typeof erc20ABI,
        'transfer'
      >['request']['abi'],
      'transfer',
      TMode
    > & { functionName?: 'transfer' }
    : UseContractWriteConfig<typeof erc20ABI, 'transfer', TMode> & {
      abi?: never
      functionName?: 'transfer'
    } = {} as any,
) {
  return useContractWrite<typeof erc20ABI, 'transfer', TMode>({
    abi: erc20ABI,
    functionName: 'transfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useErc20TransferFrom<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
      PrepareWriteContractResult<
        typeof erc20ABI,
        'transferFrom'
      >['request']['abi'],
      'transferFrom',
      TMode
    > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<typeof erc20ABI, 'transferFrom', TMode> & {
      abi?: never
      functionName?: 'transferFrom'
    } = {} as any,
) {
  return useContractWrite<typeof erc20ABI, 'transferFrom', TMode>({
    abi: erc20ABI,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__.
 */
export function usePrepareErc20Write<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, TFunctionName>,
    'abi'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareErc20Approve(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, 'approve'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareErc20Transfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, 'transfer'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    functionName: 'transfer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, 'transfer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareErc20TransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, 'transferFrom'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, 'transferFrom'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Event<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof erc20ABI, TEventName>,
    'abi'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc20ABI,
    ...config,
  } as UseContractEventConfig<typeof erc20ABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `"Approval"`.
 */
export function useErc20ApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof erc20ABI, 'Approval'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc20ABI,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof erc20ABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `"Transfer"`.
 */
export function useErc20TransferEvent(
  config: Omit<
    UseContractEventConfig<typeof erc20ABI, 'Transfer'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc20ABI,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof erc20ABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link devilsCutABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof devilsCutABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof devilsCutABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return useContractRead({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    ...config,
  } as UseContractReadConfig<typeof devilsCutABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"ghouls"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutGhouls<
  TFunctionName extends 'ghouls',
  TSelectData = ReadContractResult<typeof devilsCutABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof devilsCutABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return useContractRead({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'ghouls',
    ...config,
  } as UseContractReadConfig<typeof devilsCutABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutOwner<
  TFunctionName extends 'owner',
  TSelectData = ReadContractResult<typeof devilsCutABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof devilsCutABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return useContractRead({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof devilsCutABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"releasable"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutReleasable<
  TFunctionName extends 'releasable',
  TSelectData = ReadContractResult<typeof devilsCutABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof devilsCutABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return useContractRead({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'releasable',
    ...config,
  } as UseContractReadConfig<typeof devilsCutABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"released"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutReleased<
  TFunctionName extends 'released',
  TSelectData = ReadContractResult<typeof devilsCutABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof devilsCutABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return useContractRead({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'released',
    ...config,
  } as UseContractReadConfig<typeof devilsCutABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"shares"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutShares<
  TFunctionName extends 'shares',
  TSelectData = ReadContractResult<typeof devilsCutABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof devilsCutABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return useContractRead({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'shares',
    ...config,
  } as UseContractReadConfig<typeof devilsCutABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"totalReleased"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutTotalReleased<
  TFunctionName extends 'totalReleased',
  TSelectData = ReadContractResult<typeof devilsCutABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof devilsCutABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return useContractRead({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'totalReleased',
    ...config,
  } as UseContractReadConfig<typeof devilsCutABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link devilsCutABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof devilsCutAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
      PrepareWriteContractResult<
        typeof devilsCutABI,
        string
      >['request']['abi'],
      TFunctionName,
      TMode
    > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof devilsCutABI, TFunctionName, TMode> & {
      abi?: never
      address?: never
      chainId?: TChainId
    } = {} as any,
) {
  return useContractWrite<typeof devilsCutABI, TFunctionName, TMode>({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"emergencyWithdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutEmergencyWithdraw<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof devilsCutAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
      PrepareWriteContractResult<
        typeof devilsCutABI,
        'emergencyWithdraw'
      >['request']['abi'],
      'emergencyWithdraw',
      TMode
    > & {
      address?: Address
      chainId?: TChainId
      functionName?: 'emergencyWithdraw'
    }
    : UseContractWriteConfig<
      typeof devilsCutABI,
      'emergencyWithdraw',
      TMode
    > & {
      abi?: never
      address?: never
      chainId?: TChainId
      functionName?: 'emergencyWithdraw'
    } = {} as any,
) {
  return useContractWrite<typeof devilsCutABI, 'emergencyWithdraw', TMode>({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'emergencyWithdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"release"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutRelease<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof devilsCutAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
      PrepareWriteContractResult<
        typeof devilsCutABI,
        'release'
      >['request']['abi'],
      'release',
      TMode
    > & { address?: Address; chainId?: TChainId; functionName?: 'release' }
    : UseContractWriteConfig<typeof devilsCutABI, 'release', TMode> & {
      abi?: never
      address?: never
      chainId?: TChainId
      functionName?: 'release'
    } = {} as any,
) {
  return useContractWrite<typeof devilsCutABI, 'release', TMode>({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'release',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutRenounceOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof devilsCutAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
      PrepareWriteContractResult<
        typeof devilsCutABI,
        'renounceOwnership'
      >['request']['abi'],
      'renounceOwnership',
      TMode
    > & {
      address?: Address
      chainId?: TChainId
      functionName?: 'renounceOwnership'
    }
    : UseContractWriteConfig<
      typeof devilsCutABI,
      'renounceOwnership',
      TMode
    > & {
      abi?: never
      address?: never
      chainId?: TChainId
      functionName?: 'renounceOwnership'
    } = {} as any,
) {
  return useContractWrite<typeof devilsCutABI, 'renounceOwnership', TMode>({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"setShares"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutSetShares<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof devilsCutAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
      PrepareWriteContractResult<
        typeof devilsCutABI,
        'setShares'
      >['request']['abi'],
      'setShares',
      TMode
    > & { address?: Address; chainId?: TChainId; functionName?: 'setShares' }
    : UseContractWriteConfig<typeof devilsCutABI, 'setShares', TMode> & {
      abi?: never
      address?: never
      chainId?: TChainId
      functionName?: 'setShares'
    } = {} as any,
) {
  return useContractWrite<typeof devilsCutABI, 'setShares', TMode>({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'setShares',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutTransferOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof devilsCutAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
      PrepareWriteContractResult<
        typeof devilsCutABI,
        'transferOwnership'
      >['request']['abi'],
      'transferOwnership',
      TMode
    > & {
      address?: Address
      chainId?: TChainId
      functionName?: 'transferOwnership'
    }
    : UseContractWriteConfig<
      typeof devilsCutABI,
      'transferOwnership',
      TMode
    > & {
      abi?: never
      address?: never
      chainId?: TChainId
      functionName?: 'transferOwnership'
    } = {} as any,
) {
  return useContractWrite<typeof devilsCutABI, 'transferOwnership', TMode>({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link devilsCutABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function usePrepareDevilsCutWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof devilsCutABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof devilsCutABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"emergencyWithdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function usePrepareDevilsCutEmergencyWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<typeof devilsCutABI, 'emergencyWithdraw'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'emergencyWithdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof devilsCutABI, 'emergencyWithdraw'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"release"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function usePrepareDevilsCutRelease(
  config: Omit<
    UsePrepareContractWriteConfig<typeof devilsCutABI, 'release'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'release',
    ...config,
  } as UsePrepareContractWriteConfig<typeof devilsCutABI, 'release'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function usePrepareDevilsCutRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof devilsCutABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof devilsCutABI, 'renounceOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"setShares"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function usePrepareDevilsCutSetShares(
  config: Omit<
    UsePrepareContractWriteConfig<typeof devilsCutABI, 'setShares'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'setShares',
    ...config,
  } as UsePrepareContractWriteConfig<typeof devilsCutABI, 'setShares'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link devilsCutABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function usePrepareDevilsCutTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof devilsCutABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof devilsCutABI, 'transferOwnership'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link devilsCutABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof devilsCutABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return useContractEvent({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    ...config,
  } as UseContractEventConfig<typeof devilsCutABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link devilsCutABI}__ and `eventName` set to `"ERC20PaymentReleased"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutErc20PaymentReleasedEvent(
  config: Omit<
    UseContractEventConfig<typeof devilsCutABI, 'ERC20PaymentReleased'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return useContractEvent({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    eventName: 'ERC20PaymentReleased',
    ...config,
  } as UseContractEventConfig<typeof devilsCutABI, 'ERC20PaymentReleased'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link devilsCutABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof devilsCutABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return useContractEvent({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof devilsCutABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link devilsCutABI}__ and `eventName` set to `"PaymentReceived"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutPaymentReceivedEvent(
  config: Omit<
    UseContractEventConfig<typeof devilsCutABI, 'PaymentReceived'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return useContractEvent({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    eventName: 'PaymentReceived',
    ...config,
  } as UseContractEventConfig<typeof devilsCutABI, 'PaymentReceived'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link devilsCutABI}__ and `eventName` set to `"PaymentReleased"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xCEC26Ec16fB32eBe19C8cfab7189456C09FE15bB)
 */
export function useDevilsCutPaymentReleasedEvent(
  config: Omit<
    UseContractEventConfig<typeof devilsCutABI, 'PaymentReleased'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof devilsCutAddress } = {} as any,
) {
  return useContractEvent({
    abi: devilsCutABI,
    address: devilsCutAddress[1],
    eventName: 'PaymentReleased',
    ...config,
  } as UseContractEventConfig<typeof devilsCutABI, 'PaymentReleased'>)
}
